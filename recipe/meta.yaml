{% set version = "1.1.2" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-workflows
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/workflows_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/workflows/workflows_{{ version }}.tar.gz
  sha256: 8f41b36569fcd0455574a6e8e538808aba3c6d4d93994c13ff3a4142dfe98ff2

build:
  merge_build_host: true  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-cli >=3.3.0
    - r-generics >=0.1.2
    - r-glue >=1.6.2
    - r-hardhat >=1.2.0
    - r-lifecycle >=1.0.3
    - r-modelenv >=0.1.0
    - r-parsnip >=1.0.3
    - r-rlang >=1.0.3
    - r-tidyselect >=1.2.0
    - r-vctrs >=0.4.1
  run:
    - r-base
    - r-cli >=3.3.0
    - r-generics >=0.1.2
    - r-glue >=1.6.2
    - r-hardhat >=1.2.0
    - r-lifecycle >=1.0.3
    - r-modelenv >=0.1.0
    - r-parsnip >=1.0.3
    - r-rlang >=1.0.3
    - r-tidyselect >=1.2.0
    - r-vctrs >=0.4.1

test:
  commands:
    - $R -e "library('workflows')"           # [not win]
    - "\"%R%\" -e \"library('workflows')\""  # [win]

about:
  home: https://workflows.tidymodels.org
  dev_url: https://github.com/tidymodels/workflows
  license: MIT
  summary: Managing both a 'parsnip' model and a preprocessor, such as a model formula or recipe from 'recipes', can often be challenging. The goal of 'workflows' is to streamline this process by bundling the model alongside the preprocessor, all within the same object.
  license_family: MIT
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r
